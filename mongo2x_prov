#!/usr/bin/env bash
set -x
set -o errexit

if ! hash mongo >/dev/null 2>&1; then
  printf "Can't find mongo, exiting!\n"
  exit 1
fi


# Start MongoDB service
mkdir -p /data
/usr/bin/mongod --dbpath /data --nojournal &
while ! nc -vz localhost 27017; do sleep 4; done

mongo24x ()
{
# Create User in mongo <=2.4
local DB_HOST=${MONGO_DB_HOST:-127.0.0.1}
local DB1=${MONGO_DB_1}
local DB2=${MONGO_DB_2}
local DB3=${MONGO_DB_3}
local ADMIN_USER=${MONGO_ADMIN_USER}
local ADMIN_PASS=${MONGO_ADMIN_PASS}
local DB_ADMIN_USER=${MONGO_DB_ADMIN_USER}
local DB_ADMIN_PASS=${MONGO_DB_ADMIN_PASS}
local DB_RW_USER=${MONGO_RW_USER}
local DB_RO_USER=${MONGO_RO_USER}
local DB_RW_PASS=${MONGO_RW_PASS}
local DB_RO_PASS=${MONGO_RO_PASS}
mongo --nodb --eval \
"primary='${DB_HOST}',admin_user='${ADMIN_USER}',admin_pass='${ADMIN_PASS}',db1='${DB1}',db2='${DB2}',db3='${DB3}',db_admin_user='${DB_ADMIN_USER}',db_admin_pass='${DB_ADMIN_PASS}',rw_user='${DB_RW_USER}',rw_pass='${DB_RW_PASS}',ro_user='${DB_RO_USER}',ro_pass='${DB_RO_PASS}'"  mongoAuthn.js
}

mongo26x ()
{
# Create User in mongo >=2.6
local USER=$1
local PASS=$2
local ROLE=$3
local DB=$4
mongo admin --eval "db.createUser({ user: '$USER', pwd: '$PASS', roles: [ { role: 'userAdminAnyDatabase', db: 'admin' } ] });"
mongo $DB --eval "db.createUser({ user: '$USER', pwd: '$PASS', roles: [ { role: '$ROLE', db: '$DB' } ] });"
}

if [[ ${MONGODB_VERSION} =~ ^3 ]]; then
  mongo26x $MUSER $MPASS $MROLE $MDB
  else
  mongo24x
fi

# Stop MongoDB service
/usr/bin/mongod --dbpath /data --shutdown
sleep 4

mongod --dbpath /data --auth
